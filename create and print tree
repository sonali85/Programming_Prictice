def isBST(root, l=0, r=0):
    if root == None:
        return True
    if (l != None and root.data <= l.data):
        return False
    if (r != None and root.data >= r.data):
        return False
    return isBST(root.left, l, root) and isBST(root.right, root, r)


class Node:
    def __init__(self,data):
        self.data = data
        self.right = None
        self.left = None

    def insert(self,data):
        if self.data:
            if data < self.data:
                if self.left is None:
                    self.left = Node(data)
                else:
                    self.left.insert(data)
            elif data > self.data:
                if self.right is None:
                    self.right = Node(data)
                else:
                    self.right.insert(data)

        else:
            self.data = data

    def PrintData(self):
        if self.left:
            self.left.PrintData()
        print(self.data)
        if self.right:
            self.right.PrintData()


root = Node(1)
root.insert(2)
root.insert(3)
root.insert(4)
root.insert(5)


root.PrintData()



# root = Node(3)
# root.left = Node(2)
# root.right = Node(5)
# root.right.left = Node(10)
# #root.right.right = Node(4)
# #root.right.left.left = newNode(40)
# if (isBST(root,None,None)):
#     print("Is BST")
# else:
#     print("Not a BST")
